<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>FunctionNaming:GridStateExt.kt$@Composable fun LazyGridState.OnBottomReached( loadMore: () -&gt; Unit )</ID>
    <ID>FunctionNaming:GridStateExt.kt$@OptIn(ExperimentalFoundationApi::class) @Composable fun LazyStaggeredGridState.OnBottomReached( loadMore: () -&gt; Unit )</ID>
    <ID>FunctionNaming:MjImagesApp.kt$@Composable expect fun PlatformSpecificMjImagesGrid( onLoadMore: () -&gt; Unit, images: MjImages, modifier: Modifier = Modifier, )</ID>
    <ID>FunctionNaming:MjImagesApp.kt$@Composable fun EmptyScreen( onRefresh: () -&gt; Unit )</ID>
    <ID>FunctionNaming:MjImagesApp.kt$@Composable fun ErrorScreen( onRefresh: () -&gt; Unit )</ID>
    <ID>FunctionNaming:MjImagesApp.kt$@Composable fun MjImageItem( image: MjImage, height: Dp, contentScale: ContentScale, )</ID>
    <ID>FunctionNaming:MjImagesApp.kt$@Composable fun MjImagesList(onLoadMore: () -&gt; Unit, images: MjImages)</ID>
    <ID>FunctionNaming:MjImagesApp.kt$@OptIn(ExperimentalMaterialApi::class) @Composable fun MjImagesApp( viewModel: MjImagesViewModel )</ID>
    <ID>FunctionNaming:MjImagesList.kt$@Composable actual fun PlatformSpecificMjImagesGrid( onLoadMore: () -&gt; Unit, images: MjImages, modifier: Modifier, )</ID>
    <ID>FunctionNaming:MjImagesList.kt$@OptIn(ExperimentalFoundationApi::class) @Composable actual fun PlatformSpecificMjImagesGrid( onLoadMore: () -&gt; Unit, images: MjImages, modifier: Modifier, )</ID>
    <ID>FunctionNaming:main.ios.kt$fun MainViewController(viewModel: MjImagesViewModel): UIViewController</ID>
    <ID>MagicNumber:ImageLoader.kt$0.55</ID>
    <ID>MagicNumber:ImageLoader.kt$100</ID>
    <ID>MagicNumber:ImageLoader.kt$1024</ID>
    <ID>MagicNumber:MjImagesApp.kt$.2f</ID>
    <ID>MagicNumber:MjImagesApp.kt$.8f</ID>
    <ID>MagicNumber:MjImagesApp.kt$24f</ID>
    <ID>MagicNumber:MjImagesList.kt$180</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val androidInstrumentedTest by getting { dependencies { implementation("androidx.compose.ui:ui-test-junit4:1.4.3") implementation("androidx.compose.ui:ui-test-manifest:1.4.3") } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val androidMain by getting { dependencies { api("io.insert-koin:koin-android:$koinVersion") implementation("io.ktor:ktor-client-android:$ktorVersion") } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val androidMain by getting { dependencies { implementation(project(":shared")) api("androidx.activity:activity-compose:1.7.2") api("androidx.appcompat:appcompat:1.6.1") api("androidx.core:core-ktx:1.10.1") } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val commonTest by getting { dependencies { implementation(kotlin("test-common")) implementation(kotlin("test-annotations-common")) implementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2") implementation("io.insert-koin:koin-test:$koinTestVersion") implementation("app.cash.turbine:turbine:1.0.0") } }</ID>
    <ID>UnusedPrivateProperty:build.gradle.kts$val iosMain by creating { dependsOn(commonMain) iosX64Main.dependsOn(this) iosArm64Main.dependsOn(this) iosSimulatorArm64Main.dependsOn(this) dependencies { implementation("io.ktor:ktor-client-ios:$ktorVersion") } }</ID>
  </CurrentIssues>
</SmellBaseline>
